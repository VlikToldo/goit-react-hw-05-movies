{"version":3,"file":"static/js/186.fa3a42d0.chunk.js","mappings":"yNAwCA,UApCgB,WAAO,IAAD,EACpB,GAAsCA,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAcJ,GAFnB,OAERK,EAFQ,OAGdN,EAAeM,GAHD,gDAKdC,QAAQC,IAAI,KAAMC,SALJ,yDAAH,qDAQfL,GACD,GAAE,CAACH,IAEJ,IAAMS,EAAO,UAAGX,EAAYY,eAAf,aAAG,EAAqBC,KAAI,SAAAC,GACvC,IAAQC,EAAwBD,EAAxBC,QAASC,EAAeF,EAAfE,OAAQC,EAAOH,EAAPG,GACzB,OACE,2BACE,wBAAKD,KACL,uBAAID,MAFGE,EAKZ,IAED,OACE,oCACiBC,IAAZP,GAAyBA,EAAQQ,OAAS,KAAM,sCAClD,0BAAK,wBAAKR,OAIhB,C,+LCrCKS,EAAU,mCACVC,EAAa,+BAEbC,EAAW,mCAAG,sGACKC,EAAAA,EAAAA,IAAA,kEACsCH,IAF3C,uBACVb,EADU,EACVA,KADU,kBAIXA,GAJW,2CAAH,qDAOXiB,EAAa,mCAAG,WAAOtB,GAAP,yFACGqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAAiCnB,EAAjC,oBAAoDkB,IADvD,uBACXb,EADW,EACXA,KADW,kBAEXA,GAFW,2CAAH,sDAKbkB,EAAU,mCAAG,WAAOvB,GAAP,yFACMqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAAiCnB,EAAjC,4BAA4DkB,EAA5D,oBADN,uBACRb,EADQ,EACRA,KADQ,kBAERA,GAFQ,2CAAH,sDAKVD,EAAa,mCAAG,WAAOJ,GAAP,yFACCqB,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAAiCnB,EAAjC,4BAA4DkB,EAA5D,oBADD,uBACbb,EADa,EACbA,KADa,kBAEbA,GAFa,2CAAH,sDAKbmB,EAAU,mCAAG,WAAOC,GAAP,yFACIJ,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iCAAgDD,EAAhD,kBAAiEO,EAAjE,oBADJ,uBACVpB,EADU,EACVA,KADU,kBAEVA,GAFU,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","shared/services/movie-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchReviews } from '../../shared/services/movie-api';\n\nconst Reviews = () => {\n  const [infoReviews, setInfoReviews] = useState({});\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const data = await searchReviews(movieId);\n        setInfoReviews(data);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchFilm();\n  }, [movieId]);\n\n  const element = infoReviews.results?.map(authors => {\n    const { content, author, id } = authors;\n    return (\n      <li key={id}>\n        <h2>{author}</h2>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      {((element === undefined || element.length < 1) && <p>NotFound</p>) || (\n       <div><ul>{element}</ul></div> \n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = 'cc476e5bf962689cf79d0305b2ea0701';\nconst COMMON_URL = 'https://api.themoviedb.org/3';\n\nconst searchMovie = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nconst searchDetails = async (movieId) => {\n    const {data} = await axios.get(`${COMMON_URL}/movie/${movieId}?api_key=${API_KEY}`)\n    return data;\n}\n\nconst searchCast = async (movieId) => {\n    const {data} = await axios.get(`${COMMON_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n    return data;\n}\n\nconst searchReviews = async (movieId) => {\n  const {data} = await axios.get(`${COMMON_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\n  return data;\n}\n\nconst searchFilm = async (name) => {\n  const {data} = await axios.get(`${COMMON_URL}/search/movie?api_key=${API_KEY}&query=${name}&language=en-US`)\n  return data;\n}\n\nexport { searchMovie, searchDetails, searchCast, searchReviews, searchFilm };\n"],"names":["useState","infoReviews","setInfoReviews","movieId","useParams","useEffect","fetchFilm","searchReviews","data","console","log","message","element","results","map","authors","content","author","id","undefined","length","API_KEY","COMMON_URL","searchMovie","axios","searchDetails","searchCast","searchFilm","name"],"sourceRoot":""}